<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<herd></herd>
	<maintainer>
		<email>noisebleed@noiselabs.org</email>
		<name>Vítor Brandão (noisebleed)</name>
	</maintainer>
	<longdescription lang="en">
		Async is one more attempt to make the definition and execution of asynchronous interdependent operations easy. For that to work, you may define tasks which communicate with each other by channels. Channels transfer items, which is very similar to bytes flowing through pipes uses in inter-process communication. Items will only be generated on demand, that is when you read from the respective output channel.

		As it turned out, the GIL is far more restricting than initially thought, which effectively means true concurrency can only be obtained during input output to files and sockets, as well as specifically written versions of existing c python extensions which release the GIL before lengthy operations. Many of the currently available c extensions, such as zlib, lock everything down to just one thread at a time, even though this isn’t a strict technical requirement.

		If you want to make good use of async, you will have to carefully plan the operation, and you might end up writing a new or altering existing c-extensions for this.
	</longdescription>
</pkgmetadata>
